<style>
  .product-addon-container-gm {
    display: flex;
    flex-direction: column;
    gap: 20px;
    max-width: 100%;
    font-family: Arial, sans-serif;
    padding: 20px;
    box-sizing: border-box;
  }

  .product-addon-box {
    border: 1px solid #cce4f6;
    border-radius: 12px;
    background-color: #fff;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.03);
    padding: 30px 15px 15px;
    position: relative;
    display: flex;
    flex-direction: column;
    gap: 12px;
    transition: border 0.3s ease;
  }

  .product-addon-box.active {
    border: 2px solid #007ACE !important;
  }

  .product-addon-header {
    position: absolute;
    top: -12px;
    left: 20px;
    background: #fff;
    padding: 0 8px;
    font-size: 12px;
    font-weight: 600;
    color: #3a5163;
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .product-addon-checkbox {
    accent-color: #007ACE;
    width: 14px;
    height: 14px;
    min-width: 14px;
    min-height: 14px;
    cursor: pointer;
  }

  .product-addon-card {
    display: flex;
    gap: 16px;
    background-color: #e6f3fb;
    padding: 12px;
    border-radius: 8px;
  }

  .product-addon-image {
    width: 70px;
    height: 70px;
    object-fit: cover;
    border-radius: 50%;
    flex-shrink: 0;
  }

  .product-addon-details {
    display: flex;
    flex-direction: column;
    gap: 4px;
  }

  .product-addon-title {
    font-size: 14px;
    font-weight: 600;
    color: #1a1a1a;
  }

  .product-addon-subtitle {
    font-size: 12px;
    color: #666;
    font-style: italic;
  }

  .product-addon-description {
    font-size: 12px;
    color: #555;
    line-height: 1.4;
    max-width: 360px;
  }

  .product-addon-price-wrapper {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-top: 2px;
  }

  .product-original-price {
    text-decoration: line-through;
    color: #999;
    font-size: 12px;
  }

  .product-addon-price {
    font-size: 14px;
    color: #007ACE;
    font-weight: bold;
  }

  @media screen and (max-width: 600px) {
    .product-addon-image {
      width: 60px;
      height: 60px;
    }

    .product-addon-title {
      font-size: 13px;
    }

    .product-addon-price {
      font-size: 13px;
    }

    .product-addon-description {
      font-size: 11px;
    }
  }
</style>

<div class="product-addon-container-gm">
  {% for product in product_addon %}
    {% if product != blank and product.available %}
      <div class="product-addon-box" data-product-id="{{ product.variants.first.id }}">
        <label class="product-addon-header">
          <input
            type="checkbox"
            class="product-addon-checkbox"
            id="product-addon-checkbox-{{ forloop.index }}"
            name="product-addon-checkbox-{{ forloop.index }}"
            data-product-id="{{ product.variants.first.id }}"
          >
          Add a Better Sleep to your cart
        </label>

        <div class="product-addon-card">
          <img class="product-addon-image" src="{{ product.featured_image | image_url }}" alt="{{ product.title }}">
          <div class="product-addon-details">
            <div class="product-addon-title">{{ product.title }}</div>
            <div class="product-addon-subtitle">Nasal Dilator</div>
            <div class="product-addon-price-wrapper">
              {% if product.compare_at_price > product.price %}
                <span class="product-original-price">{{ product.compare_at_price | money }}</span>
              {% endif %}
              {% if product.tags contains 'free-gift' %}
                <span class="product-addon-price">{{ free_gift_info }}</span>
              {% else %}
                <span class="product-addon-price">{{ product.price | money }}</span>
              {% endif %}
            </div>
            <div class="product-addon-description">
              {{ product.description | strip_html | truncatewords: 25 }}
            </div>
          </div>
        </div>
      </div>
    {% endif %}
  {% endfor %}
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const checkboxes = document.querySelectorAll('.product-addon-checkbox');
    const addToCartBtn = document.querySelector('form[action="/cart/add"] [type="submit"]');

    // Highlight selection only
    checkboxes.forEach((checkbox) => {
      checkbox.addEventListener('change', () => {
        const box = checkbox.closest('.product-addon-box');
        if (box) {
          box.classList.toggle('active', checkbox.checked);
        }
      });
    });

    if (addToCartBtn) {
      addToCartBtn.addEventListener('click', function (e) {
        e.preventDefault();

        // Collect checked addons
        const selectedAddons = [];
        checkboxes.forEach((checkbox) => {
          if (checkbox.checked) {
            selectedAddons.push({
              id: checkbox.getAttribute('data-product-id'),
              quantity: 1
            });
          }
        });

        // Submit main product form
        const form = document.querySelector('form[action="/cart/add"]');
        const formData = new FormData(form);



        fetch('/cart/add.js', {
          method: 'POST',
          body: formData
        })
        .then(res => res.json())
        .then(() => {
          // If no addons, just go to cart
          if (selectedAddons.length === 0) {
            window.location.href = '/cart';
            return;
          }

          // Add selected addons
          return fetch('/cart/add.js', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ items: selectedAddons })
          });
        })
        .then(() => {
          window.location.href = '/cart';
        })
        .catch(err => {
          console.error('Add to cart failed:', err);
        });
      });
    }
  });
</script>
